services:
  redis:
    image: "redis:alpine" # Using a small Redis image
    container_name: lightbox_redis
    ports:
      - "6379:6379" # Map host port to container port if you need to access Redis from host
    volumes:
      - redis_data:/data # Persist Redis data
    # command: redis-server --requirepass YOUR_REDIS_PASSWORD # Uncomment and set if Redis needs a password
    restart: always

  web:
    build: . # Build the image from the Dockerfile in the current directory
    container_name: lightbox_web
    # command: ./gunicorn.sh # We'll use a more Docker-friendly command or directly gunicorn
    # The command in gunicorn.sh might source .venv which is not how Docker images usually work.
    # We'll run gunicorn directly.
    command: gunicorn --workers 3 --bind 0.0.0.0:5102 app:app --access-logfile - --error-logfile - --log-level info
    volumes:
      - ./static/uploads:/app/static/uploads # Mount user uploads volume
      # If you generate thumbnails outside uploads, mount that too
      # - ./static/thumbnails:/app/static/thumbnails 
    ports:
      - "5102:5102" # Map host port 5102 to container port 5102
    env_file:
      - ./.env # Load environment variables from .env file
    depends_on:
      - redis
    restart: unless-stopped

  worker:
    build: . # Can use the same image as web
    container_name: lightbox_celery_worker
    command: celery -A app.celery worker -l info -Q celery --concurrency=4 # Example concurrency
    volumes:
      - ./static/uploads:/app/static/uploads # Celery worker needs access to process MKVs
    env_file:
      - ./.env
    depends_on:
      - redis
      - web # Optional: worker might start after web is generally ready
    restart: unless-stopped

volumes:
  redis_data: # Define the named volume for Redis persistence
